From e945b17905b152921e473f542ed190bc7c612dfd Mon Sep 17 00:00:00 2001
From: "duncan.macleod" <duncan.macleod@ligo.org>
Date: Mon, 13 Nov 2023 11:35:32 +0000
Subject: [PATCH 3/4] Python: restructure build to support external
 libframel.so

so that the C and Python libraries can be built independently
---
 Python/CMakeLists.txt | 101 +++++++++++++++++++++++-------------------
 src/CMakeLists.txt    |   2 -
 2 files changed, 56 insertions(+), 47 deletions(-)

diff --git a/Python/CMakeLists.txt b/Python/CMakeLists.txt
index 9080818..45afdb1 100644
--- a/Python/CMakeLists.txt
+++ b/Python/CMakeLists.txt
@@ -4,10 +4,33 @@
 #       execute_process() call
 
 if (ENABLE_PYTHON)
+
+    # -- Configure linking against the C library
+
+    if (ENABLE_C)
+        # if building the Python and C libraries together,
+        # get the paths from the cmake target
+        set(LIBFRAMEL_TARGET "framel")
+        get_target_property(LIBFRAMEL_LIBDIR ${LIBFRAMEL_TARGET} SOURCE_DIR)
+        set(LIBFRAMEL_NAME $<TARGET_LINKER_FILE_NAME:${LIBFRAMEL_TARGET}>)
+        set(LIBFRAMEL_INCLUDEDIR ${LIBFRAMEL_LIBDIR})
+    else()
+        # otherwise find the installed library
+        find_library(LIBFRAMEL "framel" REQUIRED)
+        set(LIBFRAMEL_TARGET ${LIBFRAMEL})
+        get_filename_component(LIBFRAMEL_NAME ${LIBFRAMEL} NAME)
+        get_filename_component(LIBFRAMEL_LIBDIR ${LIBFRAMEL} DIRECTORY)
+        # and the installed headers
+        set(LIBFRAMEL_INCLUDEDIR "${CMAKE_INSTALL_PREFIX}/include")
+    endif()
+
+    list(TRANSFORM LIBFRAME_HEADERS PREPEND "${LIBFRAMEL_INCLUDEDIR}/")
+
+    # -- Configure Python build
+
     find_package(Python3 REQUIRED COMPONENTS Interpreter Development)
     set(Python3_VERSION_XY "${Python3_VERSION_MAJOR}.${Python3_VERSION_MINOR}")
 
-
     #Check if site-packages location is writable
     execute_process(
         COMMAND "test -w ${Python3_SITEARCH}"
@@ -20,7 +43,7 @@ if (ENABLE_PYTHON)
         set(TARGET_INSTALL_DIR ${Python3_SITEARCH}/framel)
     else()
 
-        #If not writabale then create a python lib directory from the CMAKE_INSTALL_PREFIX
+        #If not writeable then create a python lib directory from the CMAKE_INSTALL_PREFIX
         execute_process(
             COMMAND "${Python3_EXECUTABLE}" "-c"
             "import sysconfig; print(sysconfig.get_path('platlib', vars={'base': '.', 'platbase': '.', 'platlibdir': 'lib'}))"
@@ -34,56 +57,41 @@ if (ENABLE_PYTHON)
         set(TARGET_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/${Python3_INSTALL_DIR}/framel")
     endif()
 
+    # -- Build ctypesgen wrapper
+
     #Check if python has ctypesgen module installed
+    message(CHECK_START "Looking for ctypesgen")
     find_program(CTYPESGEN ctypesgen)
 
-    if(CTYPESGEN) #Custom target the custom command
-        add_custom_target(
-           always_run_target ALL
-           DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/framel.py
-        )
-
-        list(TRANSFORM LIBFRAME_HEADERS PREPEND "${CMAKE_CURRENT_LIST_DIR}/../src/")
-        string(REPLACE ";" " " LIBFRAME_HEADERS_STR "${LIBFRAME_HEADERS}")
-
-        string(CONCAT CTYPESGEN_COMMAND
-                "${CTYPESGEN} --cpp '${CMAKE_C_COMPILER} -E' "
-                "--include-symbols=stdout "
-                "-l libframel.so "
-                "--compile-libdir ${FRAMEL_LIBDIR} "
-                "--runtime-libdir ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}/ "
-                "-I${CMAKE_CURRENT_LISTDIR}/../src "
-                "${LIBFRAME_HEADERS_STR} "
-                "-o ${CMAKE_CURRENT_BINARY_DIR}/framel.py"
-        )
-
-        #Create a custom command to run the script to build the ctypesbinding
-        add_custom_command(
-            OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/framel.py
-            DEPENDS ${PROJECT_NAME}
-            COMMENT "Building the python ctypes binding using the command: \n\
-${CTYPESGEN_COMMAND}"
-            COMMAND ${CTYPESGEN} --cpp '${CMAKE_C_COMPILER} -E'
-                --include-symbols=stdout
-                -l libframel.so
-                --compile-libdir ${FRAMEL_LIBDIR}
-                --runtime-libdir ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}/
-                -I${CMAKE_CURRENT_LISTDIR}/../src
-                ${LIBFRAME_HEADERS}
-                -o ${CMAKE_CURRENT_BINARY_DIR}/framel.py
-        )
-        install(FILES ${CMAKE_CURRENT_BINARY_DIR}/framel.py
-            DESTINATION ${TARGET_INSTALL_DIR}
-        )
-
-    else()
+    if (NOT CTYPESGEN)
+        message(CHECK_FAIL "not found")
         message(FATAL_ERROR
             " ctypesgen is not found, the python binding cannot be generated."
             " This can be installed using pip:\n"
-            "    pip install ctypesgen"
+            "    pip install ctypesgen\n"
+            " or mamba:\n"
+            "    mamba install -c conda-forge ctypesgen"
         )
     endif()
+    message(CHECK_PASS "found: ${CTYPESGEN}")
+
+    # build Python library using ctypesgen
+    add_custom_command(
+        OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/framel.py
+        COMMENT "Building the python ctypes binding"
+        COMMAND ${CTYPESGEN} --cpp '${CMAKE_C_COMPILER} -E'
+            --include-symbols=stdout
+            -l ${LIBFRAMEL_NAME}
+            --compile-libdir ${LIBFRAMEL_LIBDIR}
+            --runtime-libdir ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}/
+            -I${LIBFRAMEL_INCLUDEDIR}
+            ${LIBFRAME_HEADERS}
+            -o ${CMAKE_CURRENT_BINARY_DIR}/framel.py
+        DEPENDS ${LIBFRAMEL_TARGET}
+    )
+    add_custom_target(framel-python ALL DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/framel.py)
 
+    # -- Build Python metadata
 
     # create a egg-info file for pip
     set(EGG_INFO_DIR "${PROJECT_NAME}-${${PROJECT_NAME}_VERSION}-py${Python3_VERSION_XY}.egg-info")
@@ -99,14 +107,17 @@ License: LGPL-2.1-or-later
 Provides: ${PROJECT_NAME}
 ")
 
+    # -- Install
 
     install(
         FILES ${CMAKE_CURRENT_BINARY_DIR}/PKG-INFO
         DESTINATION ${TARGET_SP_DIR}/${EGG_INFO_DIR}/
     )
     install(
-        FILES ${CMAKE_CURRENT_SOURCE_DIR}/frvect.py
-              ${CMAKE_CURRENT_SOURCE_DIR}/__init__.py
+        FILES
+        ${CMAKE_CURRENT_SOURCE_DIR}/__init__.py
+        ${CMAKE_CURRENT_SOURCE_DIR}/frvect.py
+        ${CMAKE_CURRENT_BINARY_DIR}/framel.py
         DESTINATION ${TARGET_INSTALL_DIR}
     )
 
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index f9c035d..09c6922 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -51,6 +51,4 @@ if (NOT DEFINED ENABLE_C OR ENABLE_C)
         DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig
     )
 
-    set(FRAMEL_LIBDIR ${CMAKE_CURRENT_BINARY_DIR} CACHE INTERNAL "FRAMEL_LIBDIR")
-
 endif()
-- 
2.39.2

